name: Deploy Firebase Functions

on:
  push:
    branches:
      - main  # Or your default branch if different

jobs:
  deploy_firebase_functions:
    name: Deploy Firebase Functions
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Match your functions/package.json engines.node or a recent LTS

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Navigate to functions directory and install dependencies
      # This ensures that any build or lint steps in your firebase.json predeploy hooks have what they need
      - name: Install Functions Dependencies
        working-directory: ./functions # Ensures npm install runs in the correct directory
        run: npm install

      # Authenticate to Google Cloud using Workload Identity Federation
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'

      # Deploy to Firebase
      - name: Deploy Functions to Firebase
        run: |
          firebase deploy --only functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --debug
          # If you encounter issues with non-interactive mode, you might add --force, but it's best to resolve underlying issues.
          # Example with --force: firebase deploy --only functions --project ${{ secrets.FIREBASE_PROJECT_ID }} --force --debug
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }} # Explicitly setting for clarity, though CLI should pick it up
